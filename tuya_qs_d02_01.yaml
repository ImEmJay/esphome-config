# Tuya QS-WiFi-D02-TRIAC 2 Channel Dimmer
#
# https://community.home-assistant.io/t/qs-wifi-d01-triac-dimmer/149811/9

substitutions:
  device_id: !secret esp_tuya_qs_d02_01_device_id
  device_name: !secret esp_tuya_qs_d02_01_device_name

  api_password: !secret esp_api_password
  ota_password: !secret esp_ota_password
  wifi_domain: !secret wifi_domain
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password

  pwm1_pin: GPIO14
  pwm2_pin: GPIO16
  uart_rx_pin: GPIO03
  uart_tx_pin: GPIO01

  default_transition_length: 1s # Default 1s
  gamma_correct: '2.8' # Default 2.8
  restore_mode: RESTORE_DEFAULT_OFF

esphome:
  name: ${device_id}

  <<: !include common/board/esp8266.yaml

<<: !include common/api.yaml
<<: !include common/ota.yaml
<<: !include common/time.yaml
<<: !include common/webserver.yaml
<<: !include common/wifi.yaml

logger:
  baud_rate: 0
  level: DEBUG
  logs:
    sensor: ERROR
    duty_cycle: ERROR
    binary_sensor: ERROR
    light: ERROR

binary_sensor:
  - !include common/binary_sensor/device_status.yaml

light:
  - platform: monochromatic
    default_transition_length: $default_transition_length
    name: "${device_name} Light 1"
    output: pwm1
    id: light_1
  - platform: monochromatic
    default_transition_length: $default_transition_length
    name: "${device_name} Light 2"
    output: pwm2
    id: light_2

output:
  - platform: esp8266_pwm
    pin: $pwm1_pin
    frequency: 800 Hz
    id: pwm1
  - platform: esp8266_pwm
    pin: $pwm2_pin
    frequency: 800 Hz
    id: pwm2

sensor:
  - !include common/sensor/uptime.yaml
  - !include common/sensor/wifi_signal.yaml
  - platform: template
    id: brightness1
    internal: true
    update_interval: 20ms
    filters:
      delta: 0.8
    lambda: |-
      if (id(light_1).remote_values.is_on()) {
        return (int(id(light_1).remote_values.get_brightness() * 255));
      }
      else {
        return 0;
      }
    on_value:
      then:
        - uart.write: !lambda |-
            return {0xFF, 0x55, 0x01, (char) id(brightness1).state,0x00, 0x00, 0x00, 0x0A};
  - platform: template
    id: brightness2
    internal: true
    update_interval: 20ms
    filters:
      delta: 0.8
    lambda: |-
      if (id(light_2).remote_values.is_on()) {
        return (int(id(light_2).remote_values.get_brightness() * 255));
      }
      else {
        return 0;
      }
    on_value:
      then:
        - uart.write: !lambda |-
            return {0xFF, 0x55, 0x02, 0x00, (char) id(brightness2).state, 0x00, 0x00, 0x0A};

text_sensor:
  - !include common/text_sensor/light_id.yaml

uart:
  rx_pin: $uart_rx_pin
  tx_pin: $uart_tx_pin
  baud_rate: 9600
  stop_bits: 1

switch:
  - !include common/switch/restart.yaml

